name: Verification pipeline for each PR

on:
  pull_request:
    branches:
      - master
      - dev

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: docker compose -f ci/docker-compose.lint.yml run lint

      - name: Clean up containers
        run: |
          docker compose -f ci/docker-compose.lint.yml down lint

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: docker compose -f ci/docker-compose.build.yml run build

      - name: Clean up containers
        run: |
          docker compose -f ci/docker-compose.build.yml down build

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: docker compose -f ci/docker-compose.unit-tests.yml run unit_tests

      - name: Clean up containers
        run: |
          docker compose -f ci/docker-compose.unit-tests.yml down unit_tests

  api-e2e-tests:
    name: API E2E Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: NODE_ENV=test DATABASE_PORT=5433 DATABASE_URL="postgresql://poll_user:poll_password@makefilm_db_test:5432/poll_db?schema=public" docker compose --env-file .env up --abort-on-container-exit database migrations api api-e2e

      - name: Clean up containers
        run: |
          docker compose down database migrations api api-e2e
